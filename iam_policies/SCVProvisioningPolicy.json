{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "GeneralRoles",
      "Effect": "Allow",
      "Action": [
        "ds:CheckAlias",
        "ds:AuthorizeApplication",
        "ds:UnauthorizeApplication",
        "ds:AddTagsToResource",
        "ds:CreateAlias",
        "ds:CreateDirectory",
        "ds:CreateTrust",
        "ds:CreateIdentityPoolDirectory",
        "ds:DisableSso",
        "ds:EnableSso",
        "ds:ShareDirectory",
        "ds:UpdateTrust",
        "ds:VerifyTrust",
        "ds:DescribeTrusts",
        "ds:DescribeDirectories",
        "ds:DeleteDirectory",
        "ds:DeleteTrust",
        "ds:DeleteDirectory",
        "ds:ListTagsForResource",
        "cloudformation:CreateChangeSet",
        "cloudformation:CreateStackSet",
        "cloudformation:DeactivateType",
        "cloudformation:DeleteChangeSet",
        "cloudformation:DeleteStackSet",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:ListStacks",
        "cloudformation:ListExports",
        "cloudformation:ListImports",
        "cloudformation:UpdateStack",
        "cloudformation:UpdateStackInstances",
        "cloudformation:UpdateStackSet",
        "cloudtrail:CreateTrail",
        "cloudtrail:DeleteTrail",
        "cloudtrail:UpdateTrail",
        "connect:CreateInstance",
        "connect:ListInstances",
        "events:DeleteRule",
        "events:DescribeRule",
        "events:PutEvents",
        "events:PutRule",
        "events:PutTargets",
        "events:RemoveTargets",
        "kms:CreateKey",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:CreateAlias",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:DeleteFunction",
        "lambda:DeleteLayerVersion",
        "lambda:GetAlias",
        "lambda:GetFunction",
        "lambda:GetFunctionCodeSigningConfig",
        "lambda:GetLayerVersion",
        "lambda:GetPolicy",
        "lambda:GetEventSourceMapping",
        "lambda:InvokeFunction",
        "lambda:ListAliases",
        "lambda:ListFunctions",
        "lambda:ListLayers",
        "lambda:ListLayerVersions",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "lambda:PublishLayerVersion",
        "lambda:PublishVersion",
        "lambda:PutFunctionEventInvokeConfig",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UpdateAlias",
        "lambda:UntagResource",
        "lambda:UpdateAlias",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:DeleteResourcePolicy",
        "logs:DeleteRetentionPolicy",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeResourcePolicies",
        "logs:GetLogEvents",
        "logs:GetLogRecord",
        "logs:GetLogGroupFields",
        "logs:PutLogEvents",
        "logs:PutResourcePolicy",
        "logs:PutRetentionPolicy",
        "logs:TagLogGroup",
        "logs:UntagLogGroup",
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:GetBucketPolicy",
        "s3:GetObject",
        "s3:GetBucketAcl",
        "s3:GetBucketNotification",
        "s3:GetObjectAttributes",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetObjectAcl",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketPolicy",
        "s3:PutBucketNotification",
        "s3:PutBucketVersioning",
        "s3:PutEncryptionConfiguration",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutAccessPointPublicAccessBlock",
        "s3:PutAccessPointPolicyForObjectLambda",
        "s3:PutObject",
        "s3:PutObjectTagging",
        "s3:PutBucketAcl",
        "s3:PutBucketCORS",
        "s3:PutBucketTagging",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionTagging",
        "s3:DeleteBucketTagging",
        "s3:DeleteObject",
        "s3:DeleteObjectTagging",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:ListBucket",
        "s3:ListBucketVersions",
        "secretsmanager:ListSecrets",
        "sns:ListSubscriptions",
        "sns:ListTopics",
        "sns:SetSubscriptionAttributes",
        "sns:Unsubscribe",
        "cloudtrail:AddTags",
        "cloudtrail:ListTags",
        "cloudtrail:RemoveTags",
        "cloudtrail:StartLogging",
        "cloudtrail:StopLogging",
        "cloudtrail:UpdateTrail",
        "cloudtrail:CreateTrail",
        "cloudtrail:DeleteTrail",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:PutEventSelectors"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SSMRoles",
      "Effect": "Allow",
      "Action": "ssm:*",
      "Resource": "arn:aws:ssm:*:{AWS_ACCOUNT_ID}:parameter/*"
    },
    {
      "Sid": "KMSRoles",
      "Effect": "Allow",
      "Action": "kms:*",
      "Resource": [
        "arn:aws:kms:*:{AWS_ACCOUNT_ID}:key/*",
        "arn:aws:kms:*:{AWS_ACCOUNT_ID}:alias/*LMKvsKey",
        "arn:aws:kms:*:{AWS_ACCOUNT_ID}:alias/*KvsKey"
      ]
    },
    {
      "Sid": "SecretMgrRoles",
      "Effect": "Allow",
      "Action": "secretsmanager:*",
      "Resource": "arn:aws:secretsmanager:*:{AWS_ACCOUNT_ID}:secret:*"
    },
    {
      "Sid": "SNSRoles",
      "Effect": "Allow",
      "Action": "sns:*",
      "Resource": "arn:aws:sns:*:{AWS_ACCOUNT_ID}:*"
    },
    {
      "Sid": "CloudwatchRoles",
      "Effect": "Allow",
      "Action": "cloudwatch:*",
      "Resource": [
        "arn:aws:cloudwatch::{AWS_ACCOUNT_ID}:dashboard/*",
        "arn:aws:cloudwatch:*:{AWS_ACCOUNT_ID}:alarm:*"
      ]
    },
    {
      "Sid": "KinesisRoles",
      "Effect": "Allow",
      "Action": "kinesis:*",
      "Resource": [
        "arn:aws:kinesis:*:{AWS_ACCOUNT_ID}:stream/*-{AWS_ACCOUNT_ID}-CTRStream",
        "arn:aws:kinesis:*:{AWS_ACCOUNT_ID}:stream/*-{AWS_ACCOUNT_ID}-ContactLensStream"
      ]
    },
    {
      "Sid": "IAMRoles",
      "Effect": "Allow",
      "Action": [
        "iam:AttachRolePolicy",
        "iam:CreatePolicy",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateUser",
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "iam:DetachRolePolicy",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetPolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:ListSAMLProviderTags",
        "iam:ListSAMLProviders",
        "iam:PassRole",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:SetSecurityTokenServicePreferences",
        "iam:SimulateCustomPolicy",
        "iam:TagRole",
        "iam:TagPolicy"
      ],
      "Resource": [
        "arn:aws:iam::{AWS_ACCOUNT_ID}:role/*"
      ]
    },
    {
      "Sid": "CloudformationRoles1",
      "Effect": "Allow",
      "Action": "cloudformation:*",
      "Resource": [
        "arn:aws:lambda:*:{AWS_ACCOUNT_ID}:function:*",
        "arn:aws:lambda:*:{AWS_ACCOUNT_ID}:layer:*:*",
        "arn:aws:secretsmanager:*:{AWS_ACCOUNT_ID}:secret:*",
        "arn:aws:s3:::*-{AWS_ACCOUNT_ID}",
        "arn:aws:s3:::prod-scv-resources-*",
        "arn:aws:s3:::prod-byoa-scv-resources-*",
        "arn:aws:cloudwatch::{AWS_ACCOUNT_ID}:dashboard/*",
        "arn:aws:cloudwatch:*:{AWS_ACCOUNT_ID}:alarm:*",
        "arn:aws:iam::{AWS_ACCOUNT_ID}:role/*",
        "arn:aws:kinesis:*:{AWS_ACCOUNT_ID}:stream/*-{AWS_ACCOUNT_ID}-CTRStream",
        "arn:aws:kinesis:*:{AWS_ACCOUNT_ID}:stream/*-{AWS_ACCOUNT_ID}-ContactLensStream",
        "arn:aws:sns:*:{AWS_ACCOUNT_ID}:*",
        "arn:aws:cloudformation:*:{AWS_ACCOUNT_ID}:stack/*-*ContactCenterStack/*",
        "arn:aws:cloudformation:*:{AWS_ACCOUNT_ID}:stack/*-*ContactCenterStack-*-*/*",
        "arn:aws:cloudformation:*:{AWS_ACCOUNT_ID}:stack/SCVBYOATenantStack/*"
      ]
    },
    {
      "Sid": "ConnectRoles",
      "Effect": "Allow",
      "Action": "connect:*",
      "Resource": "arn:aws:connect:*:{AWS_ACCOUNT_ID}:instance/*"
    }
  ]
}
